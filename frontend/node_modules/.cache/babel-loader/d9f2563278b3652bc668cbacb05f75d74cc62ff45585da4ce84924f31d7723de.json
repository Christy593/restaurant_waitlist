{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import QueueForm from\"./components/QueueForm\";import RestaurantSelector from\"./components/RestaurantSelector\";import StaffPage from\"./pages/StaffPage\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[queue,setQueue]=useState([]);const[error,setError]=useState(null);// 获取当前队列数据\nconst fetchQueue=async restaurantId=>{try{const response=await fetch(\"http://localhost:5001/api/\".concat(restaurantId,\"/queue\"));const data=await response.json();if(response.ok){console.log(\"Queue data fetched successfully:\",data);setQueue(data);setError(null);}else{setError(\"Failed to fetch queue data.\");}}catch(err){setError(\"Error connecting to the server.\");}};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(RestaurantSelector,{})}),/*#__PURE__*/_jsx(Route,{path:\"/customer/:restaurantId\",element:/*#__PURE__*/_jsx(QueueForm,{onAddToQueue:fetchQueue,queue:queue,error:error})}),/*#__PURE__*/_jsx(Route,{path:\"/staff/:restaurantId\",element:/*#__PURE__*/_jsx(StaffPage,{})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","QueueForm","RestaurantSelector","StaffPage","jsx","_jsx","jsxs","_jsxs","App","queue","setQueue","error","setError","fetchQueue","restaurantId","response","fetch","concat","data","json","ok","console","log","err","children","path","element","onAddToQueue"],"sources":["/Users/christy/restaurant_waitlist/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport QueueForm from \"./components/QueueForm\";\nimport RestaurantSelector from \"./components/RestaurantSelector\";\nimport StaffPage from \"./pages/StaffPage\";\n\nconst App = () => {\n  const [queue, setQueue] = useState([]);\n  const [error, setError] = useState(null);\n\n  // 获取当前队列数据\n  const fetchQueue = async (restaurantId) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/${restaurantId}/queue`);\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"Queue data fetched successfully:\", data);\n        setQueue(data);\n        setError(null);\n      } else {\n        setError(\"Failed to fetch queue data.\");\n      }\n    } catch (err) {\n      setError(\"Error connecting to the server.\");\n    }\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {/* 餐厅选择页面 */}\n        <Route path=\"/\" element={<RestaurantSelector />} />\n\n\n        {/* 加入队列和查看队列页面 */}\n        <Route\n          path=\"/customer/:restaurantId\"\n          element={\n            <QueueForm\n              onAddToQueue={fetchQueue}\n              queue={queue}\n              error={error}\n            />\n          }\n        />\n\n         {/* 员工端页面 */}\n         <Route path=\"/staff/:restaurantId\" element={<StaffPage />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,kBAAkB,KAAM,iCAAiC,CAChE,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAExC;AACA,KAAM,CAAAkB,UAAU,CAAG,KAAO,CAAAC,YAAY,EAAK,CACzC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,8BAAAC,MAAA,CAA8BH,YAAY,UAAQ,CAAC,CAC/E,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAIJ,QAAQ,CAACK,EAAE,CAAE,CACfC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEJ,IAAI,CAAC,CACrDR,QAAQ,CAACQ,IAAI,CAAC,CACdN,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,IAAM,CACLA,QAAQ,CAAC,6BAA6B,CAAC,CACzC,CACF,CAAE,MAAOW,GAAG,CAAE,CACZX,QAAQ,CAAC,iCAAiC,CAAC,CAC7C,CACF,CAAC,CAED,mBACEP,IAAA,CAACP,MAAM,EAAA0B,QAAA,cACLjB,KAAA,CAACR,MAAM,EAAAyB,QAAA,eAELnB,IAAA,CAACL,KAAK,EAACyB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAErB,IAAA,CAACH,kBAAkB,GAAE,CAAE,CAAE,CAAC,cAInDG,IAAA,CAACL,KAAK,EACJyB,IAAI,CAAC,yBAAyB,CAC9BC,OAAO,cACLrB,IAAA,CAACJ,SAAS,EACR0B,YAAY,CAAEd,UAAW,CACzBJ,KAAK,CAAEA,KAAM,CACbE,KAAK,CAAEA,KAAM,CACd,CACF,CACF,CAAC,cAGDN,IAAA,CAACL,KAAK,EAACyB,IAAI,CAAC,sBAAsB,CAACC,OAAO,cAAErB,IAAA,CAACF,SAAS,GAAE,CAAE,CAAE,CAAC,EACxD,CAAC,CACH,CAAC,CAEb,CAAC,CAED,cAAe,CAAAK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}