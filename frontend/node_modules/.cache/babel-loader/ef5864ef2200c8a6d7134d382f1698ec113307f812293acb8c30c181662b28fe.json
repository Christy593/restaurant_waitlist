{"ast":null,"code":"var _jsxFileName = \"/Users/christy/restaurant_waitlist/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport QueueForm from \"./components/QueueForm\";\nimport RestaurantSelector from \"./components/RestaurantSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [queue, setQueue] = useState([]);\n  const [error, setError] = useState(null);\n\n  // 获取当前队列数据\n  const fetchQueue = async restaurantId => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/${restaurantId}/queue`);\n      const data = await response.json();\n      if (response.ok) {\n        setQueue(data);\n        setError(null);\n      } else {\n        setError(\"Failed to fetch queue data.\");\n      }\n    } catch (err) {\n      setError(\"Error connecting to the server.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(RestaurantSelector, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/customer/:restaurantId\",\n        element: /*#__PURE__*/_jsxDEV(QueueForm, {\n          onAddToQueue: fetchQueue,\n          queue: queue,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xsSACx7+RfX1zGjbr0GbjbYCx+w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","QueueForm","RestaurantSelector","jsxDEV","_jsxDEV","App","_s","queue","setQueue","error","setError","fetchQueue","restaurantId","response","fetch","data","json","ok","err","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onAddToQueue","_c","$RefreshReg$"],"sources":["/Users/christy/restaurant_waitlist/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport QueueForm from \"./components/QueueForm\";\nimport RestaurantSelector from \"./components/RestaurantSelector\";\n\nconst App = () => {\n  const [queue, setQueue] = useState([]);\n  const [error, setError] = useState(null);\n\n  // 获取当前队列数据\n  const fetchQueue = async (restaurantId) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/${restaurantId}/queue`);\n      const data = await response.json();\n      if (response.ok) {\n        setQueue(data);\n        setError(null);\n      } else {\n        setError(\"Failed to fetch queue data.\");\n      }\n    } catch (err) {\n      setError(\"Error connecting to the server.\");\n    }\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {/* 餐厅选择页面 */}\n        <Route path=\"/\" element={<RestaurantSelector />} />\n\n        {/* 加入队列和查看队列页面 */}\n        <Route\n          path=\"/customer/:restaurantId\"\n          element={\n            <QueueForm\n              onAddToQueue={fetchQueue}\n              queue={queue}\n              error={error}\n            />\n          }\n        />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,kBAAkB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,UAAU,GAAG,MAAOC,YAAY,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6BF,YAAY,QAAQ,CAAC;MAC/E,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfT,QAAQ,CAACO,IAAI,CAAC;QACdL,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACLA,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZR,QAAQ,CAAC,iCAAiC,CAAC;IAC7C;EACF,CAAC;EAED,oBACEN,OAAA,CAACN,MAAM;IAAAqB,QAAA,eACLf,OAAA,CAACL,MAAM;MAAAoB,QAAA,gBAELf,OAAA,CAACJ,KAAK;QAACoB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEjB,OAAA,CAACF,kBAAkB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGnDrB,OAAA,CAACJ,KAAK;QACJoB,IAAI,EAAC,yBAAyB;QAC9BC,OAAO,eACLjB,OAAA,CAACH,SAAS;UACRyB,YAAY,EAAEf,UAAW;UACzBJ,KAAK,EAAEA,KAAM;UACbE,KAAK,EAAEA;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACnB,EAAA,CAxCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}