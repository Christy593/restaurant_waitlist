{"ast":null,"code":"var _jsxFileName = \"/Users/christy/restaurant_waitlist/staff_frontend/src/components/StaffDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport QueueList from \"./QueueList\";\nimport TableConfigForm from \"./TableConfigForm\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaffDashboard = () => {\n  _s();\n  const {\n    restaurantId\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (restaurantId) {\n      setLoading(false); // Set loading to false after necessary operations\n    }\n  }, [restaurantId]);\n\n  // Ensure data is loaded before rendering\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Staff Dashboard for \", restaurantId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QueueList, {\n      restaurantId: restaurantId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableConfigForm, {\n      restaurantId: restaurantId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(StaffDashboard, \"XFg9H2umFL4VJ9JrveSfqO6gQ3s=\", false, function () {\n  return [useParams];\n});\n_c = StaffDashboard;\nexport default StaffDashboard;\nvar _c;\n$RefreshReg$(_c, \"StaffDashboard\");","map":{"version":3,"names":["React","useState","useEffect","QueueList","TableConfigForm","useParams","jsxDEV","_jsxDEV","StaffDashboard","_s","restaurantId","loading","setLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christy/restaurant_waitlist/staff_frontend/src/components/StaffDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport QueueList from \"./QueueList\";\nimport TableConfigForm from \"./TableConfigForm\";\nimport { useParams } from \"react-router-dom\";\n\nconst StaffDashboard = () => {\n  const { restaurantId } = useParams();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (restaurantId) {\n      setLoading(false); // Set loading to false after necessary operations\n    }\n  }, [restaurantId]);\n\n  // Ensure data is loaded before rendering\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Staff Dashboard for {restaurantId}</h2>\n      <QueueList restaurantId={restaurantId} />\n      <TableConfigForm restaurantId={restaurantId} />\n    </div>\n  );\n};\n\nexport default StaffDashboard;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAa,CAAC,GAAGL,SAAS,CAAC,CAAC;EACpC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIQ,YAAY,EAAE;MAChBE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;;EAElB;EACA,IAAIC,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAM,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEV,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,GAAI,sBAAoB,EAACH,YAAY;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3CV,OAAA,CAACJ,SAAS;MAACO,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCV,OAAA,CAACH,eAAe;MAACM,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACR,EAAA,CAtBID,cAAc;EAAA,QACOH,SAAS;AAAA;AAAAa,EAAA,GAD9BV,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}